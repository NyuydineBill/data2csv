name: Test and Build Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install Django
    
    - name: Run tests
      run: |
        python manage.py test tests.test_basic tests.test_export_mixin --verbosity=2

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    # - name: Publish to PyPI
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    #   run: |
    #     twine upload dist/*
    
    # - name: Create Release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: v${{ github.run_number }}
    #     release_name: Release v${{ github.run_number }}
    #     body: |
    #       # Release v${{ github.run_number }}
    #       
    #       **Build:** #${{ github.run_number }}
    #       **Commit:** ${{ github.sha }}
    #       
    #       ## What's New
    #       - Automated CI/CD pipeline
    #       - Enhanced export functionality
    #       - Comprehensive testing
    #       
    #       ## Installation
    #       ```bash
    #       pip install django-admin-export-tools
    #       ```
    #     draft: false
    #     prerelease: false 